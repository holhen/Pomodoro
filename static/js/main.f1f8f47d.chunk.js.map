{"version":3,"sources":["components/Setter.js","components/Clock.js","components/ClockControl.js","App.js","serviceWorker.js","index.js","sounds/beep.wav"],"names":["Setter","props","react_default","a","createElement","id","concat","name","className","onClick","decrement","time","increment","Clock","sessionOn","timer","ClockControl","interval","startStop","reset","defaultState","breakLength","sessionLength","timerMinutes","timerSeconds","stopped","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","audio","React","createRef","current","load","_this2","setState","setInterval","play","clearInterval","pause","currentTime","event","target","minutes","seconds","components_Setter","components_Clock","components_ClockControl","src","Beep","ref","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.f1f8f47d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Setter(props) {\r\n    return (\r\n        <div>\r\n            <p id={`${props.id}-label`}>{props.name}</p>\r\n            <p><i className=\"fas fa-arrow-down\" id={`${props.id}-decrement`} onClick={props.decrement}></i>\r\n               <span id={`${props.id}-length`} className=\"length-label\">{props.time}</span>\r\n               <i className=\"fas fa-arrow-up\" id={`${props.id}-increment`} onClick={props.increment} ></i>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Setter;","import React from 'react'\r\n\r\nfunction Clock(props) {\r\n    return (\r\n        <div className=\"clock\">\r\n            <p id=\"timer-label\">{props.sessionOn ? \"Session\" : \"Break\"}</p>\r\n            <p id=\"time-left\">{props.timer}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clock","import React from 'react'\r\n\r\nfunction ClockControl(props) {\r\n    return (\r\n        <div className=\"clock-control\">\r\n            <span id=\"start_stop\" onClick={props.startStop}><i className=\"fas fa-play\"></i><i className=\"fas fa-pause\"></i></span> \r\n            <span id=\"reset\" onClick={props.reset}><i className=\"fas fa-sync-alt\"></i></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClockControl","import React from 'react';\nimport './App.css';\nimport Setter from './components/Setter'\nimport Clock from './components/Clock'\nimport ClockControl from './components/ClockControl'\nimport Beep from './sounds/beep.wav'\n\nlet interval;\n\nconst defaultState = {\n      breakLength: 5,\n      sessionLength: 25,\n      timerMinutes: 25,\n      timerSeconds: 0, \n      stopped: true,\n      sessionOn: true,\n}\n\nclass App extends React.Component {\n  constructor () {\n    super() \n    this.state = defaultState\n    this.startStop = this.startStop.bind(this);\n    this.reset = this.reset.bind(this);\n    this.increment = this.increment.bind(this);\n    this.decrement = this.decrement.bind(this);\n\n    this.audio = React.createRef();;\n  }\n\n  componentDidMount() {\n        this.audio.current.load();\n  }\n\n  startStop() {\n    \n    if(this.state.stopped){\n      this.setState({\n        stopped: false\n      })\n\n      interval = setInterval(() => {\n        if(this.state.timerMinutes === 0 && this.state.timerSeconds === 0) {\n          this.audio.current.play();\n         if (this.state.sessionOn) {\n            this.setState({\n              sessionOn: false,\n              timerMinutes: this.state.breakLength,\n              timerSeconds: 1\n            })\n          }\n          else {\n            this.setState({\n              sessionOn: true,\n              timerMinutes: this.state.sessionLength,\n              timerSeconds: 1\n            })\n          }\n        }\n        if(this.state.timerSeconds === 0) {\n          this.setState({\n            timerMinutes: this.state.timerMinutes - 1,\n            timerSeconds: 59\n          })\n        }\n        else {\n          this.setState({\n            timerSeconds: this.state.timerSeconds - 1\n          })\n        }\n      }, 1000)\n    }\n\n    else {\n      this.setState({\n        stopped: true \n      })\n      clearInterval(interval);\n    }\n  }\n\n  reset() {\n    this.setState(defaultState);\n    clearInterval(interval);\n    this.audio.current.pause();\n    this.audio.current.currentTime = 0;\n  }\n\n  increment(event) {\n    if(!this.state.stopped)\n      return;\n\n    if(event.target.id === \"session-increment\" && this.state.sessionLength < 60) {\n      this.setState({\n        sessionLength: this.state.sessionLength + 1\n      })\n      if(this.state.sessionOn) {\n        this.setState({\n          timerMinutes: this.state.sessionLength + 1,\n          timerSeconds: 0\n        })\n      }\n    }\n    else if(event.target.id === \"break-increment\" && this.state.breakLength < 60) {\n      if(!this.state.stopped) \n        return;\n\n      this.setState({\n        breakLength: this.state.breakLength + 1\n      })\n      if(!this.state.sessionOn){\n        this.setState({\n          timerMinutes: this.state.breakLength + 1,\n          timerSeconds: 0\n        })\n      }\n    }\n  }\n\n  decrement(event) {\n    if (event.target.id === \"session-decrement\" && this.state.sessionLength > 1) {\n      this.setState({\n        sessionLength: this.state.sessionLength - 1\n      })\n      if(this.state.stopped && this.state.sessionOn) {\n        this.setState({\n          timerMinutes: this.state.sessionLength - 1,\n          timerSeconds: 0\n        })\n      }\n    }\n    else if (event.target.id === \"break-decrement\" && this.state.breakLength > 1) {\n      this.setState({\n        breakLength: this.state.breakLength - 1\n      })\n      if(this.state.stopped && !this.state.sessionOn){\n        this.setState({\n          timerMinutes: this.state.breakLength - 1,\n          timerSeconds: 0\n        })\n      }\n    }\n  }\n\n  render() {\n    const minutes = this.state.timerMinutes < 10 ? '0' + this.state.timerMinutes : this.state.timerMinutes;\n    const seconds = this.state.timerSeconds < 10 ? '0' + this.state.timerSeconds : this.state.timerSeconds;\n    const timer = `${minutes}:${seconds}` ;\n    return (\n      <div className=\"App\">\n          <div className=\"clock-wrapper\">\n          <h1>Pomodoro Clock</h1>\n          <div className=\"settings\">\n            <Setter name=\"Break Length\" time={this.state.breakLength} id=\"break\" increment={this.increment} decrement={this.decrement}/>\n            <Setter name=\"Session Length\" time={this.state.sessionLength} id=\"session\" increment={this.increment} decrement={this.decrement}/>\n          </div>\n          <Clock timer={timer} sessionOn={this.state.sessionOn}/>\n          <ClockControl startStop = {this.startStop} reset={this.reset}/>\n        </div>\n    <audio id=\"beep\" src={Beep} ref={this.audio}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/beep.28a7e35e.wav\";"],"sourceRoot":""}